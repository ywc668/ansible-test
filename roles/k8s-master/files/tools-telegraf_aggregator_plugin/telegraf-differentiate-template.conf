# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf-differentiate.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "2s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at
  ## most metric_batch_size metrics.
  metric_batch_size = 1000
  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "2s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default, precision will be set to the same timestamp order as the
  ## collection interval, with the maximum being 1s.
  ## Precision will NOT be used for service inputs, such as logparser and statsd.
  ## Valid values are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""
  ## Run telegraf in debug mode
  debug = false
  ## Run telegraf in quiet mode
  quiet = false
  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                   Differentiator  PLUGINS                                   #
###############################################################################
[[aggregators.differentiator]]
  forward_other_metrics = false
  drop_original = true
  period = "2s"
  [aggregators.differentiator.differentiate_metrics]
    [aggregators.differentiator.differentiate_metrics.docker_container_mem]
      TableName="metrics_appAPPID"
      Pre_fix="mem_"
      ## The fields that are going to be differentiated. It supports regexp
      Counters=[".*pg.*", "fail_count"]
      ## The options of Forward_policy_other_metrics are "direct","disable","add_prefix","add_postfix","add_pre_postfix"
    	Forward_policy_other_metrics = "add_prefix"
    [aggregators.differentiator.differentiate_metrics.docker_container_cpu]
      TableName="metrics_appAPPID"
      Pre_fix="cpu_"
      Counters=[".*throttling_throttled.*",".*usage_([^p]|p[^e]).*"]
      # cpu_usage_percent is not counter but all others starting with "cpu_usage_" are counters
    	Forward_policy_other_metrics = "add_prefix"
    [aggregators.differentiator.differentiate_metrics.docker_container_net]
      TableName="metrics_appAPPID"
      Pre_fix="net_"
      Counters=["rx_.*","tx_.*"]
    	Forward_policy_other_metrics = "add_prefix"
    [aggregators.differentiator.differentiate_metrics.docker_container_blkio]
      TableName="metrics_appAPPID"
      Pre_fix="blkio_"
      Counters=["io_.*"]
    	Forward_policy_other_metrics = "add_prefix"

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################
[[outputs.kafka]]
  ## URLs of kafka brokers
  brokers = ["10.185.190.51:9092"]
  ## Kafka topic for producer messages
  topic = "raw_metrics_appAPPID" # replace "app" with name+app_id
  ## Telegraf tag to use as a routing key
  ##  ie, if this tag exists, it's value will be used as the routing key
  # routing_tag = "host"

  ## Optional SSL Config
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  ## Use SSL but skip chain & host verification
  # insecure_skip_verify = false

  ## Data format to output. This can be "influx" or "graphite"
  ## Each data format has it's own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
  data_format = "influx"

###############################################################################
#                            INPUT PLUGINS                                   #
###############################################################################
# # Read metrics about docker containers
[[inputs.docker]]
   ## Docker Endpoint
   ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
   ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
   endpoint = "unix:///var/run/docker.sock"
   ## Only collect metrics for these containers, collect all if empty
   container_names = []
   ## Timeout for docker list, info, and stats commands
   timeout = "5s"

   ## Whether to report for each container per-device blkio (8:0, 8:1...) and
   ## network (eth0, eth1, ...) stats or not
   perdevice = false
   ## Whether to report for each container total blkio and network stats or not
   total = true

   # filter all fields beginning with 'time_'
   fielddrop = ["container_id"]

   ## Filter unwanted tags
   # tagexclude = ["container_version", "container_image", "cpu", "unit", "device", "network"]
   taginclude = ["io.kubernetes.pod.namespace", "io.kubernetes.container.name", "io.kubernetes.pod.name"]

   [inputs.docker.tagpass]
    "io.kubernetes.pod.namespace"=["appAPPID"]

   ## Filter unwanted metrics by tag
   [inputs.docker.tagdrop]
    "cpu"=["cpu[0-9]*"]
    "io.kubernetes.container.name"=["POD"]
    "io.kubernetes.pod.namespace"=["app29","autoshift","kube-system","default","helper-app29","helper-app25"]
